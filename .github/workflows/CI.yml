name: CI

on:
  pull_request:

  workflow_dispatch:
    inputs:
       CONFIG_FILE:
         description: "CONFIG_FILE"
         required: true

jobs:
 
  CI:
    name: "CI"
    runs-on: Windows
    steps:
      - name: Check out the GM-TestFramework repo
        uses: actions/checkout@v3
        with:
          path: GM-TF
      - run: .\setup.bat
        working-directory: GM-TF
        shell: cmd
      - name: Running Manually
        if: github.event_name == 'workflow_dispatch'
        run: python framework_launcher.py -cf ${{ github.event.inputs.CONFIG_FILE }}
        working-directory: GM-TF      
      - name: Running on PR
        if: github.event_name == 'pull_request'
        run: python framework_launcher.py -cf ${{ secrets.ALL_CONFIG_FILE }}
        working-directory: GM-TF         
      - name: Upload tests Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test_results
          path: .\GM-TF\workspace\results\tests\
          if-no-files-found: error   
      - name: Upload summary Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: summary_file
          path: .\GM-TF\workspace\summary.json
          if-no-files-found: error        
      - uses: slackapi/slack-github-action@v1.23.0
        id: slack
        with:
           channel-id: 'C050C70MU21'
           payload-file-path: .\GM-TF\workspace\summary.json
               payload: |
                    {
                     "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                     "blocks": [
                         {
                          "type": "section",
                          "text": {
                             "type": "mrkdwn",
                             "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                                  }
                          }
                      ]
                    }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}